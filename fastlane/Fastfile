# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)
$artifacts_path = File.absolute_path "../artifacts"
platform :android do
  desc "Runs all the tests"
  lane :test do
   apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
     puts "VALUE = #{apk_path}"
     value = get_version_name(
            gradle_file_path:"/Users/jijo/Android/Fosanis/fosanis-android-beta/app/build.gradle",
            ext_constant_name:"versionName"
            )
      puts "VALUE = #{value}"
         value1 = get_version_name(
                  gradle_file_path:"/Users/jijo/Android/Fosanis/fosanis-android-beta/app/build.gradle",
                  ext_constant_name:"versionCode"
                  )
            puts "VALUE = #{value1}"
  end

  

  desc "Deploy a beta version to the Google Play"
  lane :beta do

    store_password = ENV['BITRISEIO_ANDROID_KEYSTORE_PASSWORD']
    key_password = ENV['BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD']
    releaseFilePath = File.absolute_path "../xkcdcomic"

    gradle( task: 'bundle',
           build_type: 'Release',
            properties: {
                   "android.injected.signing.store.file" => releaseFilePath,
                   "android.injected.signing.store.password" => store_password,
                    "android.injected.signing.key.alias" => ENV['BITRISEIO_ANDROID_KEYSTORE_ALIAS'],
                   "android.injected.signing.key.password" => key_password,
                 })

    upload_to_play_store(track: 'beta')
    apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    print apk_path
    mapping_path = Actions.lane_context[SharedValues::GRADLE_MAPPING_TXT_OUTPUT_PATH]
    copy_artifacts(
         target_path: $artifacts_path,
         artifacts: [
           apk_path,
           mapping_path
         ]
       )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
